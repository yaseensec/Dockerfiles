#####SERVER/Docker Host

#Generate CA Private Key
openssl genrsa -aes256 -out ca-key.pem 4096

#Generate CA Public Key
openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem

#Generate Server Key
openssl genrsa -out server-key.pem 4096

#Generate CSR 
openssl req -subj "/CN=$HOST" -sha256 -new -key server-key.pem -out server.csr

#Specifying DNS Names and IP Addresses
echo subjectAltName = DNS:$HOST,IP:10.10.10.20,IP:127.0.0.1 >> extfile.cnf

#Set the Docker daemon keyâ€™s extended usage attributes to be used only for server authentication
echo extendedKeyUsage = serverAuth >> extfile.cnf

#Generate the signed certificate
openssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem \
  -CAcreateserial -out server-cert.pem -extfile extfile.cnf

######Client Authentication

#Generate Client Key
openssl genrsa -out key.pem 4096

#Generate Client CSR
openssl req -subj '/CN=client' -new -key key.pem -out client.csr

#To make the key suitable for client authentication,Creating a new extensions config file
echo extendedKeyUsage = clientAuth > extfile-client.cnf

# Generating the signed certificate
openssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem \
  -CAcreateserial -out cert.pem -extfile extfile-client.cnf

#Removing write permissions from keys
chmod -v 0400 ca-key.pem key.pem server-key.pem

#Removing write permissions from certs and making them world readable
chmod -v 0444 ca.pem server-cert.pem cert.pem


